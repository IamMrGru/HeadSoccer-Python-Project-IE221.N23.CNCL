import pygame
import pymunk
from pymunk.vec2d import Vec2d
import random
import os

pygame.init()
pygame.mixer.init()
win = pygame.display.set_mode((1920,1000))
pygame.display.set_caption("Head Soccer")
clock=pygame.time.Clock()
space=pymunk.Space()
space.gravity=(0,-1000)
FPS=64
size=(1920,1000)
running=True
background=pygame.image.load('stadium2.jpg')
background=pygame.transform.scale(background,size)
menubg=pygame.image.load('bong-da-dau-to-2023-640.jpg')
menubg=pygame.transform.scale(menubg,size)
ball=pygame.image.load('ball.png')
ball=pygame.transform.scale(ball,(30*2.8,30*2.8))

p1=pygame.image.load('hien.png')
p1=pygame.transform.scale(p1,(40*3.2,40*3.2))
p2=pygame.image.load('ronaldo.png')
p2=pygame.transform.scale(p2,(40*3.2,40*3.2))

goal=pygame.mixer.Sound('anhkoanmung.wav')
goal2=pygame.mixer.Sound('goalde.wav')
siu=pygame.mixer.Sound('siu.wav')

head=pygame.mixer.Sound('ball.wav')
hitpost=pygame.mixer.Sound('hitpost.wav')
viva=pygame.mixer.Sound('viva.wav')
seven=pygame.mixer.Sound('Final Euro 2016 - Seven Nation Army.mp3')
ketthuc=pygame.mixer.Sound('ending.wav')

#Tạo cặp va chạm
collision_type_0=0
collision_type_1 = 1
collision_type_2 = 2
collision_type_3 = 3


score_player1 = 0
score_player2 = 0
max_score = 5
game_over = False

def update_score():
    font = pygame.font.Font(None, 200)
    text2= font.render(f"{score_player2}", True, 'Red')
    text1 = font.render(f"{score_player1}", True, 'Green')
    win.blit(text1, (20, 10))
    win.blit(text2,(1820,10))


mass = 1
radius1 = 40
moment = pymunk.moment_for_circle(mass, 0, radius1,(0,0))
player = pymunk.Body(mass, moment)
player.position = (200,100)
shape_player  = pymunk.Circle(player, radius1)
shape_player .collision_type=collision_type_0
shape_player .elasticity = 0.4  # Độ đàn hồi khi va chạm với các vật thể khác
space.add(player, shape_player )

mass = 1
radius1 = 40
moment = pymunk.moment_for_circle(mass, 0, radius1,(0,0))
player2 = pymunk.Body(mass, moment)
player2.position = (1720,100)
shape_player2  = pymunk.Circle(player2, radius1)
shape_player2 .collision_type=collision_type_0
shape_player2 .elasticity = 0.4  # Độ đàn hồi khi va chạm với các vật thể khác
space.add(player2, shape_player2 )

mass = 0.3
radius2 = 30
moment = pymunk.moment_for_circle(mass, 0, radius2,(0,0))
ball1 = pymunk.Body(mass, moment)
ball1.position = (960,500)
shape_ball1 = pymunk.Circle(ball1, radius2)
shape_ball1.collision_type=collision_type_1
shape_ball1.elasticity = 1  # Độ đàn hồi khi va chạm với các vật thể khác
space.add(ball1, shape_ball1)


# # Tạo đường biên giới bên trái
left_wall_body = pymunk.Body(body_type=pymunk.Body.STATIC)
left_wall_shape = pymunk.Segment(left_wall_body, (0, 0), (0, 1000),30 )
left_wall_shape.elasticity=0.2
space.add(left_wall_body,left_wall_shape)

# # Tạo đường biên giới bên phải

right_wall_body = pymunk.Body(body_type=pymunk.Body.STATIC)
right_wall_shape = pymunk.Segment(right_wall_body, (1920, 0), (1920, 1000), 27)
right_wall_shape.elasticity=0.2
space.add(right_wall_body,right_wall_shape)

# #Đường ở dưới
segment_body=pymunk.Body(body_type=pymunk.Body.STATIC)
segment_shape=pymunk.Segment(segment_body,(0,0),(1920,0),10)
segment_shape.elasticity=1
space.add(segment_body,segment_shape)

top_body=pymunk.Body(body_type=pymunk.Body.STATIC)
top_shape=pymunk.Segment(top_body,(0,1000),(1920,1000),5)
top_shape.elasticity=0.5
space.add(top_body,top_shape)

right_post_body=pymunk.Body(body_type=pymunk.Body.STATIC)
right_post_shape=pymunk.Segment(right_post_body,(1830,200),(1920,200),5)
right_post_shape.elasticity=1.2
space.add(right_post_body,right_post_shape)

left_post_body=pymunk.Body(body_type=pymunk.Body.STATIC)
left_post_shape=pymunk.Segment(left_post_body,(0,200),(90,200),5)
left_post_shape.elasticity=1.2
space.add(left_post_body,left_post_shape)
#GOaline

goal_line_body = pymunk.Body(body_type=pymunk.Body.STATIC)
goal_line_shape = pymunk.Segment(goal_line_body, (1900, 0), (1900, 200),30)
goal_line_shape.sensor = True  # Đánh dấu shape là sensor
goal_line_shape.collision_type=collision_type_2
space.add(goal_line_body,goal_line_shape)

#GOaline2
goal_line2_body = pymunk.Body(body_type=pymunk.Body.STATIC)
goal_line2_shape = pymunk.Segment(goal_line2_body, (40, 0), (40, 200), 30)
goal_line2_shape.sensor = True  # Đánh dấu shape là sensor
goal_line2_shape.collision_type=collision_type_3
space.add(goal_line2_body,goal_line2_shape)

def goal_reached(arbiter, space, data):
    # Lấy đối tượng bóng
    Ball = arbiter.shapes[0] if arbiter.shapes[0].collision_type != 1 else arbiter.shapes[1]    
    # Kiểm tra nếu đối tượng bóng qua vạch goaline
    if (Ball.body.position.x <1900 and Ball.body.position.y<20):
        return False
    return True

def goal_reached2(arbiter1, space, data):
    # Lấy đối tượng bóng
    Ball2 = arbiter1.shapes[0] if arbiter1.shapes[0].collision_type != 1 else arbiter1.shapes[1]    
    # Kiểm tra nếu đối tượng bóng qua vạch goaline
    if (Ball2.body.position.x <10 and Ball2.body.position.y<20):
        return False
    return True
    
def jump():
    # Kiểm tra xem nhân vật có đang tiếp xúc với mặt phẳng không
    contacts = shape_player.shapes_collide(segment_shape)
    if  len(contacts.points) !=0:
        player .apply_impulse_at_local_point((0, 700))  # Áp dụng một lực để nhân vật nhảy lên

def jump1():
    # Kiểm tra xem nhân vật có đang tiếp xúc với mặt phẳng không
    contacts = shape_player2.shapes_collide(segment_shape)
    if len(contacts.points) !=0 :
        player2 .apply_impulse_at_local_point((0, 700))  # Áp dụng một lực để nhân vật nhảy lên
def touchball():
    contacts = shape_player.shapes_collide(shape_ball1)
    contacts2 = shape_player2.shapes_collide(shape_ball1)
    if len(contacts.points) !=0  or len(contacts2.points)!=0 :
        head.play()

def touchpost():
    contacts = right_post_shape.shapes_collide(shape_ball1)
    contacts2 = left_post_shape.shapes_collide(shape_ball1)
    if len(contacts.points) !=0  or len(contacts2.points)!=0 :
        hitpost.play()

handler = space.add_collision_handler(collision_type_1, collision_type_2)  # Đăng ký bộ xử lý cho cặp collision types
handler2= space.add_collision_handler(collision_type_1,collision_type_3)
handler3= space.add_collision_handler(collision_type_1,collision_type_0)

handler.begin =goal_reached  
handler2.begin=goal_reached2

movement = 0
movement2=0
running = True
game_running ='menu'

font = pygame.font.Font(None, 50)
play_button = pygame.Rect(300, 200, 200, 100)
quit_button = pygame.Rect(300, 500, 200, 100)
play_button2 = pygame.Rect(300, 350, 200, 100)
resume_button =pygame.Rect(300, 200, 200, 100)
menu_button= pygame.Rect(300, 350, 200, 100)
pause_button= pygame.Rect(180, 0, 130, 100)
winner=''


countdown_time = 120  # 2 minutes
countdown = countdown_time * 1000  # convert to milliseconds
start_time = pygame.time.get_ticks()

music_list=['viva.wav','Final Euro 2016 - Seven Nation Army.mp3']
random_element = random.choice(music_list)
music_path = os.path.join('D:\DoanHead\HeadSoccer-Python', random_element)
pygame.mixer.music.load(music_path)
pygame.mixer.music.play(-1)
game_running='menu'
while running:
    pos1 = player.position
    if game_running=='menu':
        win.blit(menubg,(0,0))
        f = pygame.font.Font(None, 200)
        text2= f.render("Ronaldo wins", True, 'Red')
        text1 = f.render("Hien wins", True, 'Red')
        text3=f.render("DRAW", True, 'yellow')
        if winner=='Hien':
            win.blit(text1, (560, 10))
        elif winner=='Ronaldo':
            win.blit(text2, (560, 10))
        elif winner=='draw':
            win.blit(text3, (560, 10))   

        # Vẽ nút "Play"
        pygame.draw.rect(win, 'white', play_button)
        play_text = font.render("Play Fto5", True, 'black')
        play_text_rect = play_text.get_rect(center=play_button.center)
        win.blit(play_text, play_text_rect)

        pygame.draw.rect(win, 'white', play_button2)
        play_text2 = font.render("Play Time", True, 'black')
        play_text_rect2 = play_text2.get_rect(center=play_button2.center)
        win.blit(play_text2, play_text_rect2)

        # Vẽ nút "Quit"
        pygame.draw.rect(win, 'white', quit_button)
        quit_text = font.render("Quit", True, 'black')
        quit_text_rect = quit_text.get_rect(center=quit_button.center)
        win.blit(quit_text, quit_text_rect)
        pygame.display.flip()
        clock.tick(FPS)
        dt = 1 / FPS # Thời gian giữa các khung hình (60 FPS)
        space.step(dt)

    elif game_running=='ingame':
        touchball()
        touchpost()
        pos=ball1.position
        if(pos.x<60 and pos.y<167):
            goal.play()
            pygame.time.wait(4000)  # Wait for 2 seconds
            space.remove(ball1, shape_ball1)  # Remove the ball from the space
            ball1.position = (960, 800)  # Reset the ball's position
            space.add(ball1, shape_ball1)  # Add the ball back to the space
            score_player2+=1
            siu.play()
        if(pos.x>1863 and pos.y<167):
            goal2.play()
            pygame.time.wait(4000)  # Wait for 2 seconds
            space.remove(ball1, shape_ball1)  # Remove the ball from the space
            ball1.position = (960, 800)  # Reset the ball's position
            space.add(ball1, shape_ball1)  # Add the ball back to the space
            score_player1+=1
             
        win.blit(background,(0,0))  # Chen background
        # Cập nhật không gian vật lý
        update_score()
        if score_player1 >= max_score or score_player2 >= max_score:
            pygame.time.wait(5000)
            ketthuc.play()
            if score_player1>=max_score:
                winner='Hien'
            elif score_player2>=max_score:
                winner='Ronaldo'
            pygame.time.wait(5000)  # Wait for 2 seconds
            score_player1 = 0  # Reset player 1's score
            score_player2 = 0  # Reset player 2's score
            game_running='menu'

        player .velocity = (movement * 400, player .velocity.y)
        player2 .velocity = (movement2 * 400, player2 .velocity.y)

        pygame.draw.rect(win, 'red', pause_button)
        pause_text = font.render("Pause", True, 'white')
        pause_text_rect = pause_text.get_rect(center=pause_button.center)
        win.blit(pause_text, pause_text_rect)

        # Vẽ nhân vật
        pygame.draw.circle(win,'green',(int(pos1.x),int(size[1]-pos1.y)),radius1)
        p1_rect = p1.get_rect(center=(pos1.x, 1000-pos1.y))
        win.blit(p1, p1_rect)
        pos2 = player2.position
        pygame.draw.circle(win,'red',(int(pos2.x),int(size[1]-pos2.y)),radius1)
        p2_rect = p2.get_rect(center=(pos2.x, 1000-pos2.y))
        win.blit(p2, p2_rect)

        pygame.draw.line(win,'white',(1830,800),(1920,800),5)
        pygame.draw.line(win,'white',(0,800),(90,800),5)

        pygame.draw.line(win,'white',(90,1000),(90,800),5)
        pygame.draw.line(win,'white',(1830,800),(1830,1000),5)
        pos=ball1.position
        pygame.draw.circle(win,'Black',(int(pos.x),int(size[1]-pos.y)),radius2)
        ball_rect = ball.get_rect(center=(pos.x, 1000-pos.y))
        win.blit(ball, ball_rect)
        pygame.display.flip()   
        clock.tick(FPS)
        dt = 1 / FPS # Thời gian giữa các khung hình (60 FPS)
        space.step(dt)


    elif game_running=='time':
        current_time = pygame.time.get_ticks()
        elapsed_time = current_time - start_time
        remaining_time = max(0, countdown - elapsed_time)
        seconds = remaining_time // 1000
        minutes = seconds // 60
        seconds %= 60
        text = font.render(f"{minutes:02}:{seconds:02}", True, 'black')
        text_rect = text.get_rect(center=(1920 // 2, 30))
        touchball()
        touchpost()
        pos=ball1.position
        if(pos.x<60 and pos.y<167):
            goal.play()
            pygame.time.wait(2000)  # Wait for 2 seconds
            space.remove(ball1, shape_ball1)  # Remove the ball from the space
            ball1.position = (960, 800)  # Reset the ball's position
            space.add(ball1, shape_ball1)  # Add the ball back to the space
            score_player2+=1
            siu.play()
        if(pos.x>1863 and pos.y<167):
            goal2.play()
            pygame.time.wait(2000)  # Wait for 2 seconds
            space.remove(ball1, shape_ball1)  # Remove the ball from the space
            ball1.position = (960, 800)  # Reset the ball's position
            space.add(ball1, shape_ball1)  # Add the ball back to the space
            score_player1+=1
             
        win.blit(background,(0,0))  # Chen background
        win.blit(text, text_rect)

        pygame.draw.rect(win, 'red', pause_button)
        pause_text = font.render("Pause", True, 'white')
        pause_text_rect = pause_text.get_rect(center=pause_button.center)
        win.blit(pause_text, pause_text_rect)

        # Cập nhật không gian vật lý
        update_score()
        if remaining_time == 0:
            pygame.time.wait(5000)
            ketthuc.play()
            if score_player1>score_player2:
                winner='Hien'  
            elif score_player1==score_player2:
                winner='draw'
            else :
                winner='Ronaldo'
            pygame.time.wait(5000)  # Wait for 2 seconds
            score_player1 = 0  # Reset player 1's score
            score_player2 = 0  # Reset player 2's score
            game_running='menu'

        player .velocity = (movement * 400, player .velocity.y)
        player2 .velocity = (movement2 * 400, player2 .velocity.y)
        # Vẽ nhân vật
        pygame.draw.circle(win,'green',(int(pos1.x),int(size[1]-pos1.y)),radius1)
        p1_rect = p1.get_rect(center=(pos1.x, 1000-pos1.y))
        win.blit(p1, p1_rect)
        pos2 = player2.position
        pygame.draw.circle(win,'red',(int(pos2.x),int(size[1]-pos2.y)),radius1)
        p2_rect = p2.get_rect(center=(pos2.x, 1000-pos2.y))
        win.blit(p2, p2_rect)
        pygame.draw.line(win,'white',(1830,800),(1920,800),5)
        pygame.draw.line(win,'white',(0,800),(90,800),5)

        pygame.draw.line(win,'white',(90,1000),(90,800),5)
        pygame.draw.line(win,'white',(1830,800),(1830,1000),5)

        pos=ball1.position
        pygame.draw.circle(win,'Black',(int(pos.x),int(size[1]-pos.y)),radius2)
        ball_rect = ball.get_rect(center=(pos.x, 1000-pos.y))
        win.blit(ball, ball_rect)
        pygame.display.flip()   
        clock.tick(FPS)
        dt = 1 / FPS # Thời gian giữa các khung hình (60 FPS)
        space.step(dt)
    
    elif game_running =='pause':

        win.fill('Black')
        # Vẽ nút "Resume"
        pygame.draw.rect(win, 'white', resume_button)
        resume_text = font.render("Resume", True, 'black')
        resume_text_rect = resume_text.get_rect(center=resume_button.center)
        win.blit(resume_text, resume_text_rect)

        # Vẽ nút "Quit"
        pygame.draw.rect(win, 'white', quit_button)
        quit_text = font.render("Quit", True, 'black')
        quit_text_rect = quit_text.get_rect(center=quit_button.center)
        win.blit(quit_text, quit_text_rect)
        pygame.display.flip()   
        clock.tick(FPS)
        dt = 1 / FPS # Thời gian giữa các khung hình (60 FPS)
        space.step(dt)


    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                jump()
            elif event.key == pygame.K_RIGHT:
                movement = 1
            elif event.key == pygame.K_LEFT:
                movement = -1
            elif event.key == pygame.K_w:
                jump1()
            elif event.key == pygame.K_d:
                movement2 = 1
            elif event.key == pygame.K_a:
                movement2 = -1
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_RIGHT and movement == 1:
                movement = 0
            elif event.key == pygame.K_LEFT and movement == -1:
                movement = 0
            elif event.key == pygame.K_d and movement2 == 1:
                movement2 = 0
            elif event.key == pygame.K_a and movement2 == -1:
                movement2 = 0
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:  # Nút trái chuột
                mouse_pos = event.pos
                if play_button.collidepoint(mouse_pos):
                    game_running = 'ingame'
                elif play_button2.collidepoint(mouse_pos):
                    game_running ='time'
                elif menu_button.collidepoint(mouse_pos):
                    game_running = 'menu'
                elif pause_button.collidepoint(mouse_pos):
                    game_running = 'pause'
                elif quit_button.collidepoint(mouse_pos):
                    running = False
                elif resume_button.collidepoint(mouse_pos):
                    win.blit(background,(0,0))
    
    
